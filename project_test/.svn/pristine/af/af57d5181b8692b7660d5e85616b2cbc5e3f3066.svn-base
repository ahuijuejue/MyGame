local UnionListData = class("UnionListData")

function UnionListData:ctor()
	self.unionShowList = {}  -- 加入公会列表显示
	self.unionFindList = {}  -- 查找公会结果

	self.unionData = {}   -- 已加入的公会信息
	self.unionMemberData = {}  -- 公会成员信息

    --礼拜状态
    self.isSignIn = {"0", "0", "0"}

    -- 申请的公会列表
    self.applyUnions = {}

    -- 在公会中的职位
    self.unionDuty = "4"

	self.arr = {}

    local cfgs = GameConfig["ConsortiaExp"]
	for k,v in pairs(cfgs) do
		table.insert(self.arr, {
			level 		= tonumber(k), 				-- 公会等级
			exp 		= v.ConsortiaExp, 	-- vip经验
			memberNum   = v.PlayerNumber,   -- 成员数量
			admNum      = v.AdministratorNumber,   -- 管理员数量
			vcechairmanNum = v.VicechairmanNumber, -- 副会长数量
			isOpen = v.ConsortiaInstance, -- 是否开启公会副本
		})
	end

	table.sort(self.arr, function(a, b)
		return a.level < b.level
	end)
end

function UnionListData:getUnionLevel( exp )
	for i=1,#self.arr do
		if exp == self.arr[i].exp then
			return self.arr[i].level
		end
	end
end

function UnionListData:insertFindData( model )
	table.insert(self.unionFindList, model)
end

function UnionListData:insertShowData( model )
	if not self:isContainUnion(model) then
		table.insert(self.unionShowList, model)
	end
end

function UnionListData:insertUnionData( model )
	if #self.unionData >= 1 then
		self:updateUnionData(model)
	else
		self.unionData = model
	end
end

function UnionListData:updateUnionData(model)
	for k,v in pairs(model) do
		self.unionData[k] = v
	end
end

function UnionListData:insertUnionMemberData( model )
	table.insert(self.unionMemberData, model)
end

function UnionListData:isContainUnion( model )
	for i,v in ipairs(self.unionShowList) do
		if model.id == v.id then
		   return true
		end
	end
	return false
end

function UnionListData:setIsSignIn(signInArr)
	for i=1,#signInArr do
    	self.isSignIn[i] = signInArr[i]
    end
end

function UnionListData:setApplyUnions(param)
	for i=1,#param do
		self.applyUnions[i] = param[i]
	end
end

function UnionListData:getUnionDuty()
	for i,v in ipairs(self.unionMemberData) do
		if v.id == UserData.userId then
			self.unionDuty = v.duty
			return self.unionDuty
		end
	end
end

--删除聊天数据
function UnionListData:cleanData()
	for i,v in ipairs(self.unionFindList) do
		v = nil
	end
	self.unionFindList = {}

	for i,v in ipairs(self.unionShowList) do
		v = nil
	end
	self.unionShowList = {}

end

return UnionListData

--[[
    公会副本
]]

local BasicScene = import("..ui.BasicScene")
local UnionInstanceScene = class("UnionInstanceScene", BasicScene)

local MenuNode = import("..views.main.MenuNode")
local UnionInstanceRuleLayer = import("..views.union.UnionInstanceRuleLayer")

local TAG = "UnionInstanceScene"
local skyImage = "Sky_Left.png"
local backImage = "Return.png"
local backImage2 = "Return_Light.png"
local unionArenaBg =  "unionArenaBg_1.png"
local unionArena_title = "unionArena_title.png"
local listImage  = "unionData_list.png"

function UnionInstanceScene:ctor()
	UnionInstanceScene.super.ctor(self,TAG)

    self:initData()
    self:initView()
end

function UnionInstanceScene:initData()

end

function UnionInstanceScene:initView()
	CommonView.background()
	:addTo(self)
	:center()

	CommonView.blackLayer3()
	:addTo(self)

	-- 按钮层
	app:createView("widget.MenuLayer", {autoOpen=true}):addTo(self)
	:onBack(function(layer)
		app:popScene()
	end)

	self:createMenuNode()

	self.layer_ = display.newLayer():size(960, 640):pos(display.cx,display.cy):align(display.CENTER):addTo(self)
	display.newSprite(unionArenaBg):pos(450, 300):addTo(self.layer_)

	CommonButton.yellow("规则", {color = cc.c3b(252, 242, 181), size = 24})
    :onButtonClicked(function ()
    	self:createRuleLayer()
        print("规则")
    end)
    :pos(235, 482)
    :addTo(self.layer_)

    CommonButton.yellow("雇佣兵", {color = cc.c3b(252, 242, 181), size = 24})
    :onButtonClicked(function ()
        print("雇佣兵")
    end)
    :pos(635, 482)
    :addTo(self.layer_)

	--公会list
    self.listView = cc.TableView:create(cc.size(766,398))
    self.listView:setPosition(63,67)
    self.listView:setDirection(cc.SCROLLVIEW_DIRECTION_VERTICAL)
    self.listView:setVerticalFillOrder(cc.TABLEVIEW_FILL_TOPDOWN)
    self.listView:setDelegate()

    self.listView:registerScriptHandler(handler(self, self.scrollViewDidScroll), 0)
    self.listView:registerScriptHandler(handler(self, self.tableCellTouched), cc.TABLECELL_TOUCHED)
    self.listView:registerScriptHandler(handler(self, self.cellSizeForTable), cc.TABLECELL_SIZE_FOR_INDEX)
    self.listView:registerScriptHandler(handler(self, self.tableCellAtIndex), cc.TABLECELL_SIZE_AT_INDEX)
    self.listView:registerScriptHandler(handler(self, self.numberOfCellsInTableView), cc.NUMBER_OF_CELLS_IN_TABLEVIEW)
    self.listView:reloadData()
    self.layer_:addChild(self.listView)

end

function UnionInstanceScene:scrollViewDidScroll(table)

end

function UnionInstanceScene:tableCellTouched(table,cell)
	-- print("cellIdx:"..cell:getIdx())
end

function UnionInstanceScene:cellSizeForTable(table,idx)
	  return 120
end

function UnionInstanceScene:tableCellAtIndex(table,idx)
	  return self:createCell(idx)
end

function UnionInstanceScene:numberOfCellsInTableView(table)
	  return 10
end

function UnionInstanceScene:createCell(idx)
	local cell = cc.TableViewCell:new()
	cell:setIdx(idx)

    local bgSprite = display.newSprite(listImage)
    bgSprite:setAnchorPoint(0,0)
    cell:addChild(bgSprite)

    return cell
end


function UnionInstanceScene:createMenuNode()
	local menuNode = MenuNode.new()
    menuNode:setPosition(display.width-60,50)
    menuNode:setHorBtnVisible(false)
    self:addChild(menuNode,4)
end

function UnionInstanceScene:createRuleLayer()
	self.ruleLayer = UnionInstanceRuleLayer.new()
	self.ruleLayer:addTo(self)
	self.ruleLayer.delegate = self
end

function UnionInstanceScene:removeRuleLayer()
	if self.ruleLayer then
		self.ruleLayer:removeFromParent()
		self.ruleLabel = nil
	end
end

function UnionInstanceScene:updateData()
end

function UnionInstanceScene:updateView()
end

function UnionInstanceScene:netCallback(event)
    local data = event.data
    local order = data.order
    -- if order == OperationCode.OpenShopProcess then
    -- end
end

function UnionInstanceScene:onEnter()
    self.netEvent = GameDispatcher:addEventListener(EVENT_CONSTANT.NET_CALLBACK,handler(self,self.netCallback))
end

function UnionInstanceScene:onExit()
	GameDispatcher:removeEventListener(self.netEvent)
end

return UnionInstanceScene

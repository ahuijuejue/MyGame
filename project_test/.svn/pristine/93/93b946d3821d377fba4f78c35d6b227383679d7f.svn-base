--[[
    公会商店
]]
local BasicScene = import("..ui.BasicScene")
local ShopUnionScene = class("ShopUnionScene", BasicScene)

local MenuNode = import("..views.main.MenuNode")
local UserResLayer = import("..views.main.UserResLayer")
local ShopItemLayer = app:getView("shop.ShopItemLayer")

local backImage = "Return.png"
local backImage2 = "Return_Light.png"

function ShopUnionScene:ctor()
	ShopUnionScene.super.ctor(self)
	self:createBackground()

    -- 按钮层
    app:createView("widget.MenuLayer", {wealth="union"}):addTo(self):zorder(10)
    :onBack(function(layer)
        self:pop()
    end)

	local menuNode = MenuNode.new()
    menuNode:setPosition(display.width-60,50)
    menuNode:setHorBtnVisible(false)
    self:addChild(menuNode,4)

    self:initData()
    self:initView()

end

function ShopUnionScene:createBackground()

    CommonView.background()
    :addTo(self)
    :center()

    local colorLayer = display.newColorLayer(cc.c4b(0,0,0,150))
    self:addChild(colorLayer)

end

function ShopUnionScene:createBackBtn()
	local backBtn = cc.ui.UIPushButton.new({normal = backImage, pressed = backImage2})
    :onButtonClicked(function ()
        AudioManage.playSound("Back.mp3")
        app:popToScene()
    end)
    self:addChild(backBtn,4)

    local posX = display.width - 55
    local posY = display.height - 45
    backBtn:setPosition(posX,posY)
end

function ShopUnionScene:initData()
    self.data = {}
end

function ShopUnionScene:initView()
    local layer_ = display.newLayer():size(960, 640):pos(display.cx,display.cy):align(display.CENTER):addTo(self)

    display.newSprite("ShopSecret_Bg.png")
    :addTo(layer_)
    :pos(440, 313)
    :zorder(2)

--------------------------------------------------------

    -- 商品列表
    self.listView_ = base.GridView.new({
        rows = 2,
        viewRect = cc.rect(0, 0, 750, 420),
        direction = "horizontal",
        itemSize = cc.size(180, 210),
    }):addTo(layer_)
    :setBounceable(false)
    :pos(60, 55)
    :zorder(2)
    :onTouch(function(event)
        if event.name == "clicked" then
            local index = event.itemPos
            if index then
                CommonSound.click() -- 音效

                self:selectedIndex(index)
            end
        end
    end)

    -- 下次刷新
    display.newSprite("Word_Shop_NextTime.png"):addTo(layer_)
    :pos(100, 487)
    :zorder(2)

    self.refreshTime_ = base.Label.new({
        color = display.COLOR_GREEN,
        size = 18,
    }):addTo(layer_)
    :pos(190, 486)
    :zorder(2)

    -- 刷新按钮
    self.refreshBtn_ = CommonButton.red()
    :add(display.newSprite("Word_Shop_Refresh.png"))
    :addTo(layer_)
    :pos(750, 505)
    :zorder(2)
    :onButtonClicked(function(event)
        CommonSound.click() -- 音效

        print("刷新")
        local msg = {
            base.Label.new({text="是否花费"}):pos(30, 100),
            base.Label.new({text=string.format("x%d刷新商品", self.data.value)}):pos(200, 100),
            display.newSprite(self.data:getRefreshIcon()):pos(165, 100),
        }

        AlertShow.show2("提示", msg, "确定", function()
            self:refreshShop()
        end)
    end)

-- --------------------------------------------------------

    -- 物品弹出信息
    self.shopItemLayer_ = ShopItemLayer.new()
    :addTo(self)
    :zorder(11)
    :onOk(function(item)
        self:willBuyIndex(item:getIndex())
    end)
    :onCancel(function(item)
        item:hide()
    end)
    :hide()
end

function ShopUnionScene:updateListView()
    self.listView_
    :removeAllItems()
    :addItems(#self.data.items, function(event)
        local index = event.index
        local data = self.data.items[index]
        local grid = base.Grid.new({type=1})
            :setBackgroundImage(display.newSprite("Banner_Goods.png"):pos(7, 5))
            :setSelectedImage("Sold_Out.png", 6)
        self:setGridShow(grid, data)

        return grid
    end)
    :reload()
end

function ShopUnionScene:updateView()
    self:setRefreshTime(self.data.timeStr)
    self:updateListView()
end

function ShopUnionScene:updateData()
    self.data = ShopList:getShop("union")
end

function ShopUnionScene:setGridShow(grid, data)
    grid:addItems({
        UserData:createItemView(data.itemId, {tips=false}):pos(0, 25):scale(0.8),
        display.newSprite(data:getSellIcon()):pos(-32, -36):scale(0.6),
        base.Label.new({text = tostring(data.price), size=18}):pos(10, -36):align(display.CENTER),
        display.newSprite("Shop_Goods_Name.png"):pos(0, -88),
        base.Label.new({text = data.name, color = UserData:getItemColor(data.itemCfg), size=20}):pos(0, -88):align(display.CENTER)
        })
    if data.count > 1 then
        grid:addItems({
            display.newSprite("Banner_Level.png"):pos(34, -6):scale(0.7),
            base.Label.new({text = tostring(data.count), size=18})
                :align(display.CENTER):pos(34, -6),
        })
    end

    -- if data.sale ~= 0 then
    --     grid:addItems({
    --         display.newSprite(string.format("sale_%d.png", tonumber(data.sale))):pos(37, 54),
    --     })
    -- end

    grid:setSelected(not data:isSelling())
end

function ShopUnionScene:selectedIndex(index)
    local data = self.data.items[index]
    if data.sell then
        self.shopItemLayer_:show()
        :setIndex(index)
        :setTitle(data.name, UserData:getItemColor(data.itemCfg))
        :setHave(data.have)
        :setDescription(data.desc)
        :setIcon(UserData:createItemView(data.itemId, {tips=false}))
        :setItemNum(data.count)
        :setPrice(data.price)
        :setPriceUnit(data:getSellIcon())
    end
end

function ShopUnionScene:setRefreshTime(txt)
    self.refreshTime_:setString(txt)
end

function ShopUnionScene:willBuyIndex(index)
    local data = self.data.items[index]
    local shopIndex = 9
    NetHandler.request("BuyShopGoods", {
        data = {
            param1  = data.id,
            param2  = index-1,
            param3  = shopIndex,
        },
        onsuccess = function()
        end
    }, self)
end

function ShopUnionScene:didBuyItem()
    showToast({text="购买成功"})
    self.shopItemLayer_:hide()
end

function ShopUnionScene:refreshShop()
    local shopIndex = 9
    NetHandler.request("HandRefreshShop", {
        data = {param1=shopIndex},
        onsuccess = function()
            self:updateData()
            self:updateView()
        end
    }, self)
end

function ShopUnionScene:onEnter()
    self:updateData()
    self:updateView()
    self:addUpdateListener()

    self.netEvent = GameDispatcher:addEventListener(EVENT_CONSTANT.NET_CALLBACK,handler(self,self.netCallback))

end

function ShopUnionScene:netCallback(event)
    local data = event.data
    local order = event.order
    if order == OperationCode.BuyShopGoodsResponse then
        if data.result == 1 then
            self:updateView()
            self:didBuyItem()
        elseif data.result == 5 then
            local shopIndex = 9
            NetHandler.request("OpenShop",{
                data = {param1=shopIndex},
                onsuccess = function()
                    self:updateData()
                    self:updateView()
                end
            }, self)
        end
    end
end

function ShopUnionScene:addUpdateListener()
    local listenerName = self:autoRefreshListenerName()
    if listenerName then
        local shopIndex = 9
        self.handlerRefresh = UserData:addEvent(listenerName, function()
            NetHandler.request("OpenShop",{param1=shopIndex})
        end)
    end
end

-- 商店 到时间 刷新了 的检测
function ShopUnionScene:autoRefreshListenerName()
    return nil
end

function ShopUnionScene:onExit()
    GameDispatcher:removeEventListener(self.netEvent)
    UserData:removeEvent(self.handlerRefresh)
end

return ShopUnionScene

local BackfeedLayer = class("BackfeedLayer",function()
	return display.newNode()
end)

local NodeBox = import("app.ui.NodeBox")

local payImage1 = "flip_pay1.png"
local payImage2 = "flip_pay2.png"
local payImage3 = "flip_pay3.png"
local getImage1 = "backfeed_get1.png"
local getImage2 = "backfeed_get2.png"
local backImage = "backfeed_bg.png"
local boxImage1 = "box_close.png"
local boxImage2 = "box_open.png"

function BackfeedLayer:ctor()
	self.closeFunc = nil
	self:createBackView()
	self:createBackfeedBtn()
	self:createItemsView()
	self:createBoxView()
	self:addNodeEventListener(cc.NODE_EVENT,function (event)
		if event.name == "enter" then
			self:onEnter()
		elseif event.name == "exit" then
			self:onExit()
		end
	end)
end

function BackfeedLayer:createBackView()
	CommonView.blackLayer2()
	:addTo(self)

	self.backSprite = display.newSprite(backImage)
	self.backSprite:setPosition(display.cx,display.cy+30)
	self:addChild(self.backSprite)

	CommonButton.close():addTo(self.backSprite):pos(905,545)
	:scale(0.8)
	:onButtonClicked(function()
		CommonSound.close()
		if self.closeFunc then
			self.closeFunc()
		end
	end)
	--充值按钮
	self.btnPay = cc.ui.UIPushButton.new({normal = flip_pay1, pressed = flip_pay2, disabled = flip_pay3})
    :addTo(self.backSprite)
    :pos(300,255)

    self.label1 = createOutlineLabel({text = "",size = 24})
	:addTo(self.backSprite)
	:pos(300,495)

	self.label2 = createOutlineLabel({text = "",size = 15})
	:addTo(self.backSprite)
	:pos(360,110)

    CommonView.animation_show_out(self.backSprite)
end

function BackfeedLayer:createBoxView()
	self.boxNode = NodeBox.new()
	self.boxNode:setCellSize(cc.size(100,100))
	self.boxNode:setPosition(395,233)
	self.boxNode:setSpace(53,0)
	self.boxNode:setUnit(5)
	self.backSprite:addChild(self.boxNode,10)
end

function BackfeedLayer:updateBoxView()
	self.boxNode:cleanElement()

	local tab = {}
	for i=1,5 do
		local sprite
		if i < FeedbackModel.process then
			sprite = display.newSprite(boxImage2)
		elseif i == FeedbackModel.process and FeedbackModel.isFinish == 1 then
			sprite = display.newSprite(boxImage2)
		else
			sprite = display.newSprite(boxImage1)
		end
		if i < 5 then
			sprite:setScale(0.8)
		end
		table.insert(tab,sprite)
	end
	self.boxNode:addElement(tab)
end

--显示商品
function BackfeedLayer:createItemsView()
	self.itemBox = NodeBox.new()
	self.itemBox:setCellSize(cc.size(100,100))
	self.itemBox:setPosition(280,410)
	self.itemBox:setSpace(10,0)
	self.itemBox:setUnit(len)
	self.backSprite:addChild(self.itemBox,10)
end

function BackfeedLayer:updateItemView()
	self.itemBox:cleanElement()

	local itemsNode = {}
	local len = #FeedbackModel.items

	for j=1,len do
		local item = FeedbackModel.items[j]
		table.insert(itemsNode,self:showItem(tostring(item.param1), tonumber(item.param3)))
    end

	self.itemBox:addElement(itemsNode)
end

--显示商品列表
function BackfeedLayer:showItem(itemId, count)
    local grid = UserData:createItemView(itemId, {scale=0.7})

    local label = base.Label.new({
        text = tostring(count),
        size = 18,
        color = CommonView.color_white(),
    })
    :align(display.BOTTOM_RIGHT)
    :pos(50, -50)

    grid:addItem(label)

    return grid
end

function BackfeedLayer:createBackfeedBtn()
	self.btn1 = cc.ui.UIPushButton.new()
	:onButtonClicked(function ()
		if FeedbackModel.rechargeValue < FeedbackModel:getRechargeLimit() then
			app:pushScene("RechargeScene")
		else
			NetHandler.gameRequest("GetSevenRechargeAward")
		end
    end)
    self.btn1:setPosition(530,400)
	self.backSprite:addChild(self.btn1)

	self.label3 = createOutlineLabel({text = "", size = 24})
	self.label3:setPosition(0,35)
	self.btn1:addChild(self.label3)
end

function BackfeedLayer:updateBackfeedBtn()
	if FeedbackModel.rechargeValue < FeedbackModel:getRechargeLimit() then
		self.btn1:setButtonImage("normal",payImage1)
	  	self.btn1:setButtonImage("pressed",payImage2)
	else
		if FeedbackModel.isFinish == 1 then
			self.btn1:setButtonImage("disabled",payImage3)
			self.btn1:setButtonEnabled(false)
		else
			self.btn1:setButtonImage("normal",getImage1)
			self.btn1:setButtonImage("pressed",getImage2)
		end
	end
end

function BackfeedLayer:updateLabel()
	local str = string.format("今日充值%d元即可领取第%d阶段奖励",FeedbackModel:getRechargeLimit(),FeedbackModel.process)
	if FeedbackModel.isFinish == 1 then
		str = string.format("充值%s元即可领取第%d阶段奖励","??",FeedbackModel.process+1)
	end
	self.label1:setString(str)
	

	str = string.format("活动规则: 1.达成一个阶段的充值任务后,第二天凌晨5点开启下一个阶段。\n             2.每一个阶段只累积当天的充值金额。\n             3.本活动将于%d天后消失,所有未领奖励将自动发放邮箱。",7)
	self.label2:setString(str)

	str = string.format("%d/%d",FeedbackModel.rechargeValue,FeedbackModel:getRechargeLimit())
	if FeedbackModel.isFinish == 1 then
		str = "次日5点开启"
	end
	self.label3:setString(str)
end

function BackfeedLayer:updateView()
	self:updateBackfeedBtn()
	self:updateLabel()
	self:updateItemView()
	self:updateBoxView()
end

function BackfeedLayer:onEnter()
	self:updateView()
end

function BackfeedLayer:onExit()

end

return BackfeedLayer